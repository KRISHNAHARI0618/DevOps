docker_networking:

  definition:
    networking: "Communication between two hosts/devices over wired or wireless connection."
    docker:
      - "Docker is a platform that implements containerization."
      - "Docker Networking is communication between two Docker containers."

  communication_types:
    - Container_1 <--> Container_2

  container_host_communication:
    bridge_networking:
      description: >
        Docker creates a virtual network interface called docker0 (virtual eth0), which bridges with host eth0 to enable communication.
      structure:
        - Host(eth0) --> Docker0 --> veth0 --> Docker(eth0)
      note: "Virtual ethernet == Docker0"

  docker_network_types:
    - Bridge Networking
    - Host Networking
    - Overlay Networking (used in Docker Swarm)

  host_networking:
    description: >
      All containers connect to the host's IP/eth0 network interface.
    disadvantage: "Lower security due to no network isolation."

  custom_bridge_networking:
    description: >
      Allows creating custom virtual eth0 to isolate containers within the same host.
    note: "Virtual Bridge == Bridge Networking"

  network_usage:
    purpose:
      - "Link Docker container to multiple networks."
      - "Provide isolation for Docker containers."

  docker_network_model:
    model: "Container Network Model (CNM)"
    implementation: "libnetwork"

  cnm_components:
    - networks:
        description: "Software switch implementation to group/isolate endpoints"
    - endpoints:
        description: "Virtual Network Interfaces for making connections"
    - sandboxes:
        description: "Isolated network stack (handles routing, switching, etc.)"

  disadvantages:
    - "Cannot assign custom DNS names to IP addresses inside Docker networking"

  docker_network_commands:
    - docker network create secure-network
    - docker network ls
    - docker network inspect
    - docker network bridge
    - docker run -d --name finance --network=secure-network nginx:latest
    - docker run -d --name mongodb --network=roboshop mongodb:v1
    - docker run -d --name mongodb --network=<networkname> <image-id>
