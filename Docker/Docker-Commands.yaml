user_change_to_docker:
  command: "usermod -aG docker centos"

basic_docker_commands:
  docker_ps: "Lists all running containers"
  docker_images: "Lists all available images"
  docker_pull:
    description: "Downloads image from Docker Hub"
    example: "docker pull nginx"
  docker_hub: "Repository where all Docker images are available"
  image_nature: "Image is static in nature"

container_build_process:
  description: "When you run the image, a container is created"
  definition: "Running instance of an image is a container"
  commands:
    - "docker create <image-id>: Create a container"
    - "docker ps: List running containers"
    - "docker ps -a: List all containers (including stopped)"
    - "docker start <container-id>: Start the container"
    - "docker run = docker pull + docker create + docker start"
  steps:
    - "Pull the image"
    - "Run the image / Create the container"
    - "Start the container"

container_removal:
  commands:
    - "docker images -a -q: List only image IDs"
    - "docker rmi <image-id>: Remove image"
    - "docker rm <container-id>: Remove container"
    - "docker rm $(docker ps -a -q): Remove all containers"
    - "docker logs <container-name>: Show container logs"
    - "docker inspect <container-id>: Show container details"

port_forwarding:
  description: "Map host port to container port"
  command: "docker run -p <host-port>:<container-port> <image-name>"
  detached_mode: "docker run -d -p <host-port>:<container-port> nginx"

accessing_container:
  exec_command: "docker exec -it <container-id> bash"
  logs_command: "docker logs <container-id>"

container_naming:
  command: "docker run --name <container-name>"

bare_minimum_image:
  description: "Less memory and bare minimum installation"
  command: "docker run -d --name myalpine -p 8082:80 nginx:alpine"

dockerfile:
  description: "Text file with instructions to build an image"
  build_command: "docker build --tag <image-name> <dockerfile-path>"

image_creation_flow:
  steps:
    - "Dockerfile => docker build => image created"
    - "Image => docker create => container created"
    - "docker start <container-name>"

dockerfile_instructions:
  from: "Download the operating system"
  run: "Install and configure inside base OS (runs at image creation)"
  cmd: "Runs at container creation to execute command"

docker_lifecycle:
  - "docker build image"
  - "docker create container"
  - "docker start container"
  - "docker stop"
  - "docker restart"
  - "docker kill"
  - "docker network"

docker_network_commands:
  connect: "Connect a container to a network"
  create: "Create a new network"
  disconnect: "Disconnect a container from a network"
  inspect: "Show detailed network information"
  ls: "List all networks"
  prune: "Remove all unused networks"
  rm: "Remove one or more networks"

docker_push_example:
  syntax: "docker push docker.io/<docker-username>/<image-name>"

docker_build_and_run:
  build_command: "docker build -t <image-name>:version ."
  run_command: "docker run <image-name> -d -p 8080:80"